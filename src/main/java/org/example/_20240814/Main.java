package org.example._20240814;

public class Main {
    public static void main(String[] args) {
// Используйте оператор switch-case вместо оператора if-else
// при обработке введенной математической операции.
//К списку арифметических операций, выполняемых калькулятором,
// добавьте поддержку операции деления по модулю (%), возвращающую остаток от деления.
        // Используйте операторы цикла для:
        //Реализации интерактивного меню.
        // После завершения вычислений калькулятор должен спрашивать желает ли пользователь выполнить еще вычисление.
        // Если пользователь вводит "Y", то калькулятор выполняет новый цикл работы - запрашивает значения аргументов
        // и знак математической операции, выполняет вычисления и выводит на экран ответ.
        // После этого снова спрашивает желает ли пользователь выполнить еще вычисление.
        // Если пользователь вводит "N", то работа программы завершается.
        //Ввода корректного значения выбора пользователя в интерактивном меню - "Y" или "N".
        // Если пользователь ввёл иной символ - программа должна попросить ввести ответ снова, до тех под, пока пользователь не введет символ "Y" или "N".

        Calculator calculator = new Calculator();
        calculator.run();


        //        if (charAt != '+' && charAt != '-' && charAt != '*' && charAt != '/' && charAt != '%') {
//            System.out.println("операция не поддерживается программой.");
//            return;
//        }

        //            if ((operation == '/' || operation == '%') && numSecond == 0) {
//                System.out.println("на 0 делить нельзя.");
//                return;
//            }

//                 do {
//            System.out.println("Выполнить ещё ? (Y/N)");
//            needNextCalc = scanner.next();
//        } while (!Constant.ANS_YES.equalsIgnoreCase(needNextCalc) && !Constant.ANS_NO.equalsIgnoreCase(needNextCalc));
//
//       }
//
//       while (Constant.ANS_YES.equalsIgnoreCase(needNextCalc));

    }
}



